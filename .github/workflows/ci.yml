name: Bump Version on Merge to main

on:
  push:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: "!contains(toJSON(github.event.commits.*.message), 'chore(release)')"
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      
      - uses: fregante/setup-git-user@v1

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: bump version
        run: npx standard-version --no-verify
      
      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "::set-output name=latest-tag::$latest_tag"
      
      - name: Create new branch
        run: git checkout -b release/${{ steps.get_latest_tag.outputs.latest-tag }}

      - name: Close older PRs
        run: |
          gh pr list --state open --base main --json number,title | jq -r '.[] | select(.title | contains("chore(release)")) | .number' | xargs -I {} gh pr close {}
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Push changes
        run: git push -f origin release/${{ steps.get_latest_tag.outputs.latest-tag }}

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with: 
          github_token: ${{ secrets.ACCESS_TOKEN }}
          pr_title: 'chore(release): ${{ steps.get_latest_tag.outputs.latest-tag }}'
          destination_branch: main
          source_branch: release/${{ steps.get_latest_tag.outputs.latest-tag }}
          pr_body: 'This PR was automatically created after a merge to main.'
          # Optional: labels to add to the PR
          pr_label: auto-generated

      - name: Merge Pull Request
        run: |
          pr_number=$(gh pr list --state open --base main --json number,title | jq -r '.[] | select(.title == "chore(release): ${{ steps.get_latest_tag.outputs.latest-tag }}") | .number')
          if [ -n "$pr_number" ]; then
            gh pr merge $pr_number --merge --admin --repo ${{ github.repository }}
          fi
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
